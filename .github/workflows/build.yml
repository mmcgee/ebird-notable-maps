name: Build bird maps at 12:00 and 21:00 ET (EDT only)

on:
  schedule:
    - cron: "0 16 * * *"   # 12:00 PM EDT (UTC-4)
    - cron: "0 1 * * *"    # 9:00 PM EDT (UTC-4) next-day UTC
  workflow_dispatch:
    inputs:
      FORCE_BUILD:
        description: "Set to true to run immediately (uses nearest slot label)"
        required: false
        default: "false"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Decide RUN_SLOT/RUN_DATE_ET from the triggering cron or a force run
      - name: Determine intended slot
        id: slot
        run: |
          force="${{ github.event.inputs.FORCE_BUILD }}"
          # Default values
          run_slot=""
          run_date_et=$(TZ=America/New_York date +'%Y-%m-%d')

          if [ "$force" = "true" ]; then
            # For force builds, pick the nearest slot by current ET hour
            hour=$(TZ=America/New_York date +'%H')
            if [ "$hour" -ge 6 ] && [ "$hour" -lt 18 ]; then
              run_slot="12"
            else
              run_slot="21"
            fi
          else
            # Use the cron expression that triggered the run
            trig="${{ github.event.schedule }}"
            if [ "$trig" = "0 16 * * *" ]; then
              run_slot="12"
              # date already correct
            elif [ "$trig" = "0 1 * * *" ]; then
              run_slot="21"
              # 01:00 UTC corresponds to 21:00 EDT of the previous local day
              # For safety, recompute the ET date explicitly at runtime:
              run_date_et=$(TZ=America/New_York date -d 'yesterday' +'%Y-%m-%d')
            else
              echo "Unexpected schedule: $trig"
              exit 1
            fi
          fi

          echo "run_slot=$run_slot" >> $GITHUB_OUTPUT
          echo "run_date_et=$run_date_et" >> $GITHUB_OUTPUT
          echo "Resolved slot=$run_slot on ET date=$run_date_et"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate map
        env:
          EBIRD_API_KEY: ${{ secrets.EBIRD_API_KEY }}
          OUTPUT_DIR: ${{ github.workspace }}/docs/maps
          KEEP_COUNT: "30"
          RUN_DATE_ET: ${{ steps.slot.outputs.run_date_et }}
          RUN_SLOT: ${{ steps.slot.outputs.run_slot }}
        run: |
          mkdir -p "$OUTPUT_DIR"
          python scripts/build_map.py

      - name: Rebuild archive index
        run: |
          files=$(ls -1 docs/maps/ebird_radius_map_*.html 2>/dev/null | sort -r)
          {
            echo '<!doctype html><meta charset="utf-8"><title>eBird Notable Maps Archive</title>'
            echo '<style>body{font-family:sans-serif;margin:2rem;} h1{font-size:1.6rem;} ul{line-height:1.6;} .latest{margin-bottom:1.5rem;font-size:1.1rem;} .note{color:#555}</style>'
            echo '<h1>eBird Notable Maps</h1>'
            echo '<div class="latest"><strong><a href="maps/latest.html">Open Latest Map</a></strong></div>'
            echo '<div class="note">Scheduled at 12:00 and 21:00 New York time (EDT configuration)</div>'
            echo '<h2>Archive</h2><ul>'
            for f in $files; do
              fname=$(basename "$f")
              echo "<li><a href=\"maps/$fname\">$fname</a></li>"
            done
            echo '</ul>'
          } > docs/index.html

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          add: "docs"
          message: "Automated map build"
          default_author: github_actions

